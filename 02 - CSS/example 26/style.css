.flex-container div {
    border: 1px solid black;
    /*flex-grow: 1; para que crezcan o distribuyan bien al aumentar/disminuir tamano
    flex-shrink: 0; para que los item no se puedan hacer pequenos de lo establecido con basis(pero si mas grandes)
    flex-basis: 100px; */
    flex: 1 0 100px;
}

.flex-container {
    border: 1px solid red;
    display: flex;/*LOS ITEMS SE MUESTRAN HORIZONTALES, SHOWIN EN EL ORDEN DEL .html*/
    /*flex-direction: row;*/
    height: 50vh;
    /*flex-wrap: wrap-reverse;*/
    flex-flow: row wrap;

   justify-content: space-evenly;
   align-items: baseline;
   align-content: space-around;
}

.flex-container div:nth-child(1) { /*Muestra: |2|3|4|5|1|*/
    order: 1;
    flex-grow: 1;
    height: 100px;
    text-align: bottom;
}
/*
**********FLEXBOX ES UN MODULO (FORMADO POR PROPIEDADES)*********
.flex-container div:nth-child(3) { Muestra: |2|4|5|1|3|
    order: 2;
    flex-grow: 1; *nos permite saber que tanto puede crecer un item en el contenedor*
}
.flex-container div:nth-child(5) { Muestra: |5|2|4|1|3|
    order: 2;
    flex-grow: -1;  
}

.flex-container div:nth-child(5) {
    order: -1; TRAERLO HACIA EL FRENTE
    flex-grow: 2;
    flex-shrink: 1; EVITA QUE LOS ITEMS SE HAGAN MAS PEQUENOS, POR DEFECTO TIENE EL VALOR DE 1
    PERO SI LE PONEMOS 0, LOS ELEMENTOS NO CAMBIARAN EL TAMANO
}
    -----------------------------------------------------------
    DIRECCIONES DE CONTENIDO: Flex-direction (modifica el comportamiento del eje main)
    flex-direction: row; de izq a derecha
    flex-direction: row-reverse; derecha a izq
    flex-direction:column; Intercambia la direccion del main con la del cross, siendo main verticalmente 
    flex-direction:main; de arriba hacia abajo
    flex-direction:column-reverse; el main va de abajo hacia arriba
    ------------------------------------------------------------
    display: flex; muestra los items horizontalmente, adaptandose al ancho y alto de todos
    los items, poniendose uno siguiente del otro
    -------------------------------------------------------------
    flex-shrink: 1; EVITA QUE LOS ITEMS SE HAGAN MAS PEQUENOS, POR DEFECTO TIENE EL VALOR DE 1
    PERO SI LE PONEMOS 0, LOS ELEMENTOS NO CAMBIARAN EL TAMANO. AL PONER 2 O 3, PERMITIRA QUE SE HAGA
    2 O 3 VECES MAS PEQUENO
    -------------------------------------------------------------
    flex-basis: 20px; PERMITE DEFINIR TAMANO BASE, LOS ELEMENTOS CRECERAN 20 px MINIMO DE ANCHO,
    ESTA PROPIEDAD FURULA RESPECTO AL EJE MAIN
    --------------------------------------------------------------
    HACER QUE LOS ELEMENTOS NO MIDAN MENOS DE 100px Y SI NO CABEN QUE SE SALTEN A LA SIG LINEA
    1) configurar que los elementos tengan todos 100px de ancho
    2) que no se hagan mas pequenos
    3) puedan crecer proporcionalmente
    .flex-container div {
    flex-direction: row;
    flex-grow: 1; para que crezcan o distribuyan bien al aumentar/disminuir tamano
    flex-shrink: 0; para que los item no se puedan hacer pequenos de lo establecido con basis(pero si mas grandes)
    flex-basis: 100px;
    4) que al llegar al maximo de basis, se salten de linea
    .flex-container {
    display: flex; LOS ITEMS SE MUESTRAN HORIZONTALES, SHOWIN EN EL ORDEN DEL .html
    flex-wrap: nowrap; (por defecto, no hara nada)
    flex-wrap: wrap; (hara salto de lineas)
    flex-wrap: reverse; (invierte el orden de los items)
    }
    -------------------------------------------------------------
    PARA CONFIGURAR LAS PROPIEDAD DE MANERA SENCILLA:
    A) LAS PROPIEDADES DE LOS DIV DEL CONTAINER GENERAL (GROW, SHRINK, BASIS)
    .flex-container div {
    flex (grow) (shrink) (basis (en px)); EQUIVALE A:
    flex-grow: 1;
    flex-shrink: 0;
    flex-basis: 100px;
    flex: 1 0 100px;
   }
   B) LAS PROPIEDADES DEL CONTAINER GENERAL (DIRECTION, WRAP)
    .flex-container {
    flex-grow: 1;
    flex-wrap: wrap;
    flex-flow: row wrap;
   }
   --------------------------------------------------------------
   ALINEAR ELEMENTOS DENTRO DE LOS FLEX
   A) justify-content AFECTARA LA ALINEACION DE LOS ELEMENT EN EL EJE MAIN, DEPENDE DEL VALOR DE FLEX-DIRECTION
   .flex-container {
    display: flex;
    flex-direction: row;****RESPECTO AL EJE MAIN****
    justify-content: (flex-start[comienza a la izq por defecto], flex-end[muestra los itms a la derecha],
    center[items al centro de la fila "row"], space-betweeen[separarlos por igual],
    espace-around[separa los itms de los bordes], space-evenly[mas espacio respecto a los bordes y menos entre elemntos]);
   }
   B) RESPECTO AL EJE CROSS, PARA ELLO:
   .flex-container {
 ***height: 50vh; ****AGREGAR ALTURA DEL VIEWPORT****
    display: flex;
    flex-direction: row;****RESPECTO AL EJE CROSS****
    justify-content: (CUALQUIERA);
 ***aling-items: (flex-start[comienda desde arriba], flex-end[muestra los itms hacia abajo],
    center[items al centro de la columna "cross"], stretch[por defecto, toman TODO el alto de la columna],
    baseline[similar a flex-start, but this se usa when queremos aling el text sin importar la forma o size de los items];
 ***aling-content: ;***PARA ELLO ACTIVAMOS: flex: 1 0 100px; | flex-wrap: wrap; | flex-flow: row wrap; | 
    (center[centrar las 3 lineas verticalmente], Y TODAS LAS MISMAS PROPIEDADES PARA EL aling-items),
    tambien space-between, space-around
    ;
    
}

   
    */